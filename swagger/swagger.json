{
    "swagger": "2.0",
    "info": {
        "title": "beego Test API",
        "description": "beego has a very cool tools to autogenerate documents for your API",
        "version": "1.0.0",
        "termsOfService": "http://beego.me/",
        "contact": {
            "email": "astaxie@gmail.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        }
    },
    "basePath": "/v1",
    "paths": {
        "/gestor_documental/": {
            "post": {
                "tags": [
                    "gestor_documental"
                ],
                "description": "Crear documento en Nuxeo",
                "operationId": "GestorDocumentalController.PostGestorDocumental",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Crear documento en Nuxeo",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/{}"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{}"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/gestor_documental/{enlace}": {
            "get": {
                "tags": [
                    "gestor_documental"
                ],
                "description": "obtener documento por enlace",
                "operationId": "GestorDocumentalController.GetGestorDocumental",
                "parameters": [
                    {
                        "in": "path",
                        "name": "enlace",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{}"
                    },
                    "403": {
                        "description": ":enlace is empty"
                    }
                }
            }
        },
        "/gestor_documental/{url}": {
            "put": {
                "tags": [
                    "gestor_documental"
                ],
                "description": "Crear documento en Nuxeo",
                "operationId": "GestorDocumentalController.PostGestorDocumental",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Crear documento en Nuxeo",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/{}"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{}"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/novedad/": {
            "get": {
                "tags": [
                    "novedad"
                ],
                "description": "get Novedades",
                "operationId": "NovedadesController.GetAll",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.Novedades"
                        }
                    },
                    "403": {
                        "description": ""
                    }
                }
            },
            "post": {
                "tags": [
                    "novedad"
                ],
                "description": "create Novedades",
                "operationId": "NovedadesController.Create",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for Novedades content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Novedades"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.Novedades"
                        }
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/novedad/{id}": {
            "delete": {
                "tags": [
                    "novedad"
                ],
                "description": "delete the Novedades",
                "operationId": "NovedadesController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            },
            "patch": {
                "tags": [
                    "novedad"
                ],
                "description": "Inactiva una novedad espec√≠fica por su ID",
                "operationId": "NovedadesController.Inactivar novedad por ID",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "ID de la novedad",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/map[string]interface{}"
                        }
                    },
                    "400": {
                        "description": "{object} map[string]interface{}"
                    }
                }
            }
        },
        "/novedad/{id}/{vigencia}": {
            "get": {
                "tags": [
                    "novedad"
                ],
                "description": "get Novedades by id",
                "operationId": "NovedadesController.GetOne",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.Novedades"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "novedad"
                ],
                "description": "update the Novedades",
                "operationId": "NovedadesController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for Novedades content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Novedades"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.Novedades"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            }
        },
        "/registro_novedad/": {
            "post": {
                "tags": [
                    "registro_novedad"
                ],
                "description": "Agregar RegistroNovedad",
                "operationId": "RegistroNovedadController.PostRegistroNovedad",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body Agregar RegistroNovedad content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/{}"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{}"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/replica/": {
            "get": {
                "tags": [
                    "replica"
                ],
                "description": "get Replica",
                "operationId": "ReplicaController.GetAll",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.Replica"
                        }
                    },
                    "403": {
                        "description": ""
                    }
                }
            },
            "post": {
                "tags": [
                    "replica"
                ],
                "description": "create Replica",
                "operationId": "ReplicaController.Create",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for Replica content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Replica"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.Replica"
                        }
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/replica/{id}": {
            "get": {
                "tags": [
                    "replica"
                ],
                "description": "get Replica by id",
                "operationId": "ReplicaController.GetOne",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.Replica"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "replica"
                ],
                "description": "update the Replica",
                "operationId": "ReplicaController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for Replica content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Replica"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.Replica"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "replica"
                ],
                "description": "delete the Replica",
                "operationId": "ReplicaController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/validarCambioEstado/": {
            "post": {
                "tags": [
                    "validarCambioEstado"
                ],
                "description": "create ValidarCambiosEstado",
                "operationId": "CambioEstadoContratoValidoController.ValidarCambiosEstado",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Crear documento en Nuxeo",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/{}"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.Alert"
                        }
                    },
                    "400": {
                        "description": "body is empty"
                    }
                }
            }
        }
    },
    "definitions": {
        "45982.0xc000596420.false": {
            "title": "false",
            "type": "object"
        },
        "map[string]interface{}": {
            "title": "map[string]interface{}",
            "type": "object"
        },
        "models.Alert": {
            "title": "Alert",
            "type": "object",
            "properties": {
                "Body": {
                    "$ref": "#/definitions/45982.0xc000596420.false"
                },
                "Code": {
                    "type": "string"
                },
                "Type": {
                    "type": "string"
                }
            }
        },
        "models.Novedades": {
            "title": "Novedades",
            "type": "object"
        },
        "models.Replica": {
            "title": "Replica",
            "type": "object"
        },
        "{}": {
            "title": "{}",
            "type": "object"
        }
    },
    "tags": [
        {
            "name": "validarCambioEstado",
            "description": "CambioEstadoContratoValidoController operations for CambioEstadoContratoValido\n"
        },
        {
            "name": "registro_novedad",
            "description": "RegistroNovedadController operations for RegistroNovedad\n"
        },
        {
            "name": "novedad",
            "description": "NovedadesController operations for Novedades\n"
        },
        {
            "name": "replica",
            "description": "ReplicaController operations for Replica\n"
        },
        {
            "name": "gestor_documental",
            "description": "GestorDocumentalController operations for Nuxeo\n"
        }
    ]
}